{"ast":null,"code":"var _jsxFileName = \"D:\\\\VScode\\\\\\u9879\\u76EE\\\\myreactstudy\\\\ReactStudy\\\\day05\\\\src\\\\hooks\\\\useEffect\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n/*  子组件  */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Child() {\n  _s();\n  const [count, setCount] = useState(0);\n  /* \r\n    开启和清除定时器\r\n  */\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    // 清楚定时器 return 是 Effect 的一个可选的清除机制，每一个 uesEffect 都有一个返回一个清除函数\n    // return 执行机制，是在组件被销毁之前才会执行\n    return () => {\n      clearInterval(timer);\n      console.log('定时器消除了—— 组件销毁了');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Child\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Child, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = Child;\nexport default function App() {\n  _s2();\n  const [display, setDisplay] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [display && /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDisplay(!display),\n      children: display ? '隐藏child' : '显示child组件'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"pY20sCGcv4xMvnCK0WpHiQ5VIiE=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Child","_s","count","setCount","timer","setInterval","clearInterval","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","display","setDisplay","onClick","_c2","$RefreshReg$"],"sources":["D:/VScode/项目/myreactstudy/ReactStudy/day05/src/hooks/useEffect/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n/*  子组件  */\r\nfunction Child() {\r\n  const [count, setCount] = useState(0);\r\n  /* \r\n    开启和清除定时器\r\n  */\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCount((count) => count + 1);\r\n    }, 1000);\r\n    // 清楚定时器 return 是 Effect 的一个可选的清除机制，每一个 uesEffect 都有一个返回一个清除函数\r\n    // return 执行机制，是在组件被销毁之前才会执行\r\n    return () => {\r\n      clearInterval(timer);\r\n      console.log('定时器消除了—— 组件销毁了');\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h2>{count}</h2>\r\n      <h1>Child</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default function App() {\r\n  const [display, setDisplay] = useState(true);\r\n  return (\r\n    <div>\r\n      {display && <Child />}\r\n      <button onClick={() => setDisplay(!display)}>\r\n        {display ? '隐藏child' : '显示child组件'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC;AACF;AACA;EACED,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BF,QAAQ,CAAED,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;IAChC,CAAC,EAAE,IAAI,CAAC;IACR;IACA;IACA,OAAO,MAAM;MACXI,aAAa,CAACF,KAAK,CAAC;MACpBG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAKP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBd,OAAA;MAAAU,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACZ,EAAA,CAtBQD,KAAK;AAAAc,EAAA,GAALd,KAAK;AAuBd,eAAe,SAASe,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,oBACEE,OAAA;IAAAU,QAAA,GACGQ,OAAO,iBAAIlB,OAAA,CAACC,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBd,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMD,UAAU,CAAC,CAACD,OAAO,CAAE;MAAAR,QAAA,EACzCQ,OAAO,GAAG,SAAS,GAAG;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACG,GAAA,CAVuBD,GAAG;AAAAK,GAAA,GAAHL,GAAG;AAAA,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}